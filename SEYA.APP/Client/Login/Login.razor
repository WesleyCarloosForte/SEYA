@page "/login"
@using System.ComponentModel.DataAnnotations
@using CurrieTechnologies.Razor.SweetAlert2;
@using SEYA.APP.Shared.DTO.Funcionario;
@using SEYA.APP.Shared.DTO;
@inject NavigationManager navManager



<div class="row mt-5">
    <div class="col-lg-4 offset-lg-4 border rounded p-4">
        <h3 class="mb-4 text-center">Login</h3>
        <div class="mb-3">
            <label for="correo" class="form-label">Login</label>
            <input id="correo" @bind="login" class="form-control" />
        </div>
        <div class="mb-3">
            <label for="contrasena" class="form-label">Contraseña</label>
            <input id="contrasena" @bind="password" type="password" class="form-control" />
        </div>
        <div class="text-center">
            <button @onclick="LoginRes" class="btn btn-primary">Iniciar sesión</button>
        </div>
    </div>
</div>


@code {

    private string login;
    private string password;

    [Inject]
    protected IJSRuntime JSRuntime { get; set; }
    [Inject]
    protected SweetAlertService swl { get; set; }
    [Inject]
    protected HttpClient http { get; set; }
    [Inject]
    protected NavigationManager NavigationManager { get; set; }

    public async Task GuardarUsuario(FuncionarioCreateDTO usuario)
    {
        try
        {

            await RemoverUsuario();
            string usuarioJson = System.Text.Json.JsonSerializer.Serialize(usuario);
            await JSRuntime.InvokeVoidAsync("localStorage.setItem", "Usuario", usuarioJson);

        }
        catch (Exception)
        {

            await new Utils.Functions(JSRuntime, swl).ShowError("Error al guardar", "Error");
        }


    }

    public async Task RemoverUsuario()
    {
        var usuarioJson = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "Usuario");
        if (!string.IsNullOrEmpty(usuarioJson))
        {
            await JSRuntime.InvokeVoidAsync("localStorage.removeItem", "Usuario");
            // Realizar cualquier otra acción después de eliminar el usuario
        }
    }

    private async Task LoginRes()


    {
        try
        {
            var a = await http.PostAsJsonAsync($"{SEYA.APP.Shared.API.url}/Funcionario/Login", new LoginDTO { Login = login, Password = password });
            if (a.IsSuccessStatusCode)
            {


                var us = Newtonsoft.Json.JsonConvert.DeserializeObject<FuncionarioCreateDTO>(await a.Content.ReadAsStringAsync());


                await GuardarUsuario(us);
                if (us.RolId == 1)
                {
                    AppState.ShowMenu();
   

                }
                AppState.IsVisibleAll = true;
                AppState.ShowSalir();
                await JSRuntime.InvokeVoidAsync("eval", "location.reload(true)");
                NavigationManager.NavigateTo("/");
                
            }
            else
            {
                password = string.Empty;
                await new Utils.Functions(JSRuntime, swl).ShowError("Credenciales invalildas", "Error");
            }
        }
        catch (Exception ex)
        {
            password = string.Empty;
            await new Utils.Functions(JSRuntime, swl).ShowError("Credenciales invalildas", "Error");
        }


        // Aquí puedes agregar la lógica para autenticar al usuario
        // utilizando el valor de "login" y "password"

        // Redirigir a la página principal después de iniciar sesión

    }
    /**
        public async Task<UsuarioViewDTO> ValidarCredenciales()
        {
            if(!string.IsNullOrEmpty(login) || !string.IsNullOrEmpty(password))
            {

            }

        }
        */

}
