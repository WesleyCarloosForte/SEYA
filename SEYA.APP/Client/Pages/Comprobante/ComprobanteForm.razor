@page "/Comprobante"
@inject HttpClient http
@inject IJSRuntime js
@using CurrieTechnologies.Razor.SweetAlert2;
@using Microsoft.AspNetCore.Components.Forms
@inject SweetAlertService swl;
@using SEYA.APP.Client.Components.Buttons
@using SEYA.APP.Shared.DTO.Cliente;
@using SEYA.APP.Shared.DTO.Deuda;
@using SEYA.APP.Shared.Models
<h3>Datos de facturación</h3>



<div class="container">
    <div class="row">

        <div class="col-md-8">
            <!-- Crea la interfaz de usuario -->
            <!-- Card principal -->
            <div class="card">
                <div class="card-body">
                    <!-- Card de Cliente -->
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">Datos del comprobante</h5>
                            <EditForm Model="@Comprobante" OnValidSubmit="@SaveForm">
                                <div class="form-field">
                                    <label>Descripcion</label>
                                    <div>
                                        <InputText class="form-control" @bind-Value="@Comprobante.Descripcion" readonly></InputText>
                                        <ValidationMessage For="@(() => Comprobante.Descripcion)" />
                                    </div>
                                </div>

                                <div class="form-field">
                                    <label>Numero Actual</label>
                                    <div>
                                        <InputNumber class="form-control" @bind-Value="@Comprobante.NumeroActual"></InputNumber>
                                        <ValidationMessage For="@(() => Comprobante.NumeroActual)" />
                                    </div>
                                </div>

                                <div class="form-field">
                                    <label>Numero Final</label>
                                    <div>
                                        <InputNumber class="form-control" @bind-Value="@Comprobante.NumeroFinal"></InputNumber>
                                        <ValidationMessage For="@(() => Comprobante.NumeroFinal)" />
                                    </div>
                                </div>

                                <div class="form-field">
                                    <label>Inicio Vigencia</label>
                                    <div>
                                        <InputDate class="form-control" @bind-Value="@Comprobante.InicioVigencia"></InputDate>
                                        <ValidationMessage For="@(() => Comprobante.InicioVigencia)" />
                                    </div>
                                </div>

                                <div class="form-field">
                                    <label>Fin Vigencia</label>
                                    <div>
                                        <InputDate class="form-control" @bind-Value="@Comprobante.FinVigencia"></InputDate>
                                        <ValidationMessage For="@(() => Comprobante.FinVigencia)" />
                                    </div>
                                </div>

                                <div class="form-field">
                                    <label>Punto de Expedicion</label>
                                    <div>
                                        <InputText class="form-control" @bind-Value="@Comprobante.PuntoExpedicion"></InputText>
                                        <ValidationMessage For="@(() => Comprobante.PuntoExpedicion)" />
                                    </div>
                                </div>

                                <div class="form-field">
                                    <label>Timbrado</label>
                                    <div>
                                        <InputText class="form-control" @bind-Value="@Comprobante.Timbrado"></InputText>
                                        <ValidationMessage For="@(() => Comprobante.Timbrado)" />
                                    </div>
                                </div>

                                <div class="form-field">
                                    <label>Sucursal</label>
                                    <div>
                                        <InputText class="form-control" @bind-Value="@Comprobante.Sucursal"></InputText>
                                        <ValidationMessage For="@(() => Comprobante.Sucursal)" />
                                    </div>
                                </div>

                                <button type="submit" @onclick=@SaveForm class="btn btn-primary my-2">Guardar</button>

                                <DataAnnotationsValidator />
                            </EditForm>

                        </div>




                    </div>

                </div>

                <!-- Card de Comprobante -->
                <!-- Card de Comprobante -->
                <!-- Card de Pago -->
                <!-- Card de Pago y Totales -->





            </div>

        </div>
    </div>


</div>




@code {
    Comprobante Comprobante { get; set; } = new Comprobante();

 
    protected override async Task OnInitializedAsync()
    {
        try
        {
            Comprobante =await http.GetFromJsonAsync<Comprobante>($"{SEYA.APP.Shared.API.url}/Comprobante");
        }
        catch (Exception ex)
        {


        }

    }

    private async void SaveForm()
    {
        
 
            
            var resp = await http.PutAsJsonAsync($"{SEYA.APP.Shared.API.url}/Comprobante/{Comprobante.Id}",Comprobante);
            if (resp.StatusCode == System.Net.HttpStatusCode.OK)
            {
                await new Utils.Functions(js, swl).ShowSaved();
            }
            else
            {
                await new Utils.Functions(js, swl).ShowError("No fue posible registrar.", "Error");
            }

  
        


    }

}
